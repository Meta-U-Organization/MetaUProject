// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

model user {
  id                    Int            @id @default(autoincrement())
  username              String         @unique
  passwordHash          String
  email                 String         @unique
  name                  String
  phoneNumber           String
  address               String
  preferredMeetLocation String
  preferredMeetTime     String
  donationsReceived     Int            @default(0)
  lastDonationReceived  DateTime       @default(now())
  numTimesDonated       Int            @default(0)
  notifications         notification[]
  donationPosts         donationPost[]
  requestPosts          requestPost[]
}

model notification {
  id          Int    @id @default(autoincrement())
  type        String
  description String
  user        user?  @relation(fields: [userId], references: [id])
  userId      Int?
}

model donationPost {
  id                 Int                  @id @default(autoincrement())
  title              String
  description        String
  photo              String
  itemState          String
  userId             Int
  possibleRecipients possibleRecipients[]
  user               user                 @relation(fields: [userId], references: [id])
}

model possibleRecipients {
  id             Int           @id @default(autoincrement())
  userId         Int
  Distance       String
  wantScore      String
  donationPost   donationPost? @relation(fields: [donationPostId], references: [id])
  donationPostId Int?
}

model requestPost {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  photo       String
  itemState   String
  userId      Int
  user        user   @relation(fields: [userId], references: [id])
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
